@model Mio.ELearning.Core.ViewModels.CourseViewModel

@using System.Text.Json
@using Mio.ELearning.Core.ViewModels

@{
    var isEdit = Model.CourseId > 0;
    ViewData["Title"] = isEdit ? "Chỉnh sửa khóa học" : "Thêm khóa học";
    var action = isEdit ? "Edit" : "Create";
}

<div class="main-content">
    <div class="main-content-inner">
        <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item">
                    <a asp-area="" asp-controller="Home" asp-action="Index">
                        <i class="fas fa-home"></i> Trang chủ
                    </a>
                </li>
                <li class="breadcrumb-item">
                    <a asp-action="Index">Danh sách khóa học</a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
            </ol>
        </nav>

        <div class="card shadow-sm p-4">
            <div class="text-center mb-4">
                <h2 class="fw-bold">@ViewData["Title"]</h2>
            </div>

            @if (!string.IsNullOrEmpty(Model.ImageUrl))
            {
                <div class="text-center image-container mb-4">
                    <img src="@Model.ImageUrl" alt="Course Image" class="img-fluid" style="max-width: 300px;" />
                </div>
            }
            <form asp-action="@action" method="post" id="course-form" enctype="multipart/form-data">
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger">
                        <ul class="mb-0">
                            @foreach (var item in ViewData.ModelState)
                            {
                                foreach (var error in item.Value.Errors)
                                {
                                    <li><strong>@item.Key:</strong> @error.ErrorMessage</li>
                                }
                            }
                        </ul>
                    </div>
                }

                @if (isEdit)
                {
                    <input type="hidden" asp-for="CourseId" />
                }

                <div class="row mb-3">
                    <label asp-for="CourseName" class="col-sm-3 col-form-label">Tên khóa học</label>
                    <div class="col-sm-9">
                        <input asp-for="CourseName" class="form-control" required />
                        <span asp-validation-for="CourseName" class="text-danger"></span>
                    </div>
                </div>

                <div class="row mb-3">
                    <label asp-for="Description" class="col-sm-3 col-form-label">Mô tả</label>
                    <div class="col-sm-9">
                        <textarea asp-for="Description" class="form-control"></textarea>
                    </div>
                </div>

                <div class="row mb-3">
                    <label asp-for="CategoryId" class="col-sm-3 col-form-label">Danh mục</label>
                    <div class="col-sm-9">
                        <select asp-for="CategoryId" class="form-select" asp-items="ViewBag.AllCategories">
                            <option value="">-- Chọn danh mục --</option>
                        </select>
                        <span asp-validation-for="CategoryId" class="text-danger"></span>
                    </div>
                </div>

                <div class="row mb-3">
                    <label class="col-sm-3 col-form-label">Ảnh khóa học</label>
                    <div class="col-sm-9">
                        <input type="file" name="ImageFile" class="form-control" accept="image/*" />
                        <input type="hidden" name="ImageUrl" value="@Model.ImageUrl" />
                    </div>
                </div>

                <hr class="my-4" />

                <div class="mb-3">
                    <label class="form-label fw-bold">Học phần</label>
                    <div id="sections-container" class="mb-3"></div>
                    <button type="button" class="btn btn-success" id="add-section">
                        <i class="fas fa-plus me-1"></i> Thêm phần
                    </button>
                </div>

                <div class="text-end mt-4">
                    <button type="submit" class="btn btn-primary me-2">
                        @(isEdit ? "Lưu thay đổi" : "Thêm khóa học")
                    </button>
                    <a asp-action="Index" class="btn btn-warning">Quay lại</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(function () {
            let sectionIndex = @Model.Sections?.Count ?? 0;
            const initialSections = @Html.Raw(JsonSerializer.Serialize(Model.Sections ?? new List<SectionViewModel>()));

            function createLessonForm(sectionIdx, lessonIdx, lesson = {}) {
                return `
            <div class="lesson-item card mt-2 p-3">
                <div class="d-flex justify-content-between align-items-center">
                    <strong>Bài học ${lessonIdx + 1}: ${lesson.LessonName || ''}</strong>
                    <button type="button" class="btn btn-danger btn-sm remove-lesson">Xóa bài học</button>
                </div>
                <input type="hidden" name="Sections[${sectionIdx}].Lessons[${lessonIdx}].LessonId" value="${lesson.LessonId || 0}" />
                <input type="hidden" name="Sections[${sectionIdx}].Lessons[${lessonIdx}].Order" value="${lesson.Order || lessonIdx + 1}" />
    
                <div class="mt-2">
                    <label class="form-label">Tên bài học</label>
                    <input name="Sections[${sectionIdx}].Lessons[${lessonIdx}].LessonName" class="form-control" value="${lesson.LessonName || ''}" required />
                </div>
    
                <div class="mt-2">
                    <label class="form-label">Nội dung</label>
                    <textarea name="Sections[${sectionIdx}].Lessons[${lessonIdx}].Content" class="form-control">${lesson.Content || ''}</textarea>
                </div>
    
                <div class="mt-2">
                    <label class="form-label">Video</label>
                    <input type="file" name="Sections[${sectionIdx}].Lessons[${lessonIdx}].VideoFile" class="form-control" accept="video/*" />
                    <input type="hidden" name="Sections[${sectionIdx}].Lessons[${lessonIdx}].VideoUrl" value="${lesson.VideoUrl || ''}" />
                    ${lesson.VideoUrl ? `<video src="${lesson.VideoUrl}" controls class="mt-2" style="max-width: 200px;"></video>` : ''}
                </div>
    
                <div class="mt-2">
                    <label class="form-label">Tài liệu</label>
                    <input type="file" name="Sections[${sectionIdx}].Lessons[${lessonIdx}].DocumentFile" class="form-control" accept=".pdf,.doc,.docx" />
                    <input type="hidden" name="Sections[${sectionIdx}].Lessons[${lessonIdx}].DocumentUrl" value="${lesson.DocumentUrl || ''}" />
                    ${lesson.DocumentUrl ? `<a href="${lesson.DocumentUrl}" target="_blank" class="d-block mt-2">Xem tài liệu</a>` : ''}
                </div>
            </div>`;
            }

            function createSectionForm(section, i) {
                let lessonHtml = "";
                const lessons = section.Lessons || [];
                for (let j = 0; j < lessons.length; j++) {
                    lessonHtml += createLessonForm(i, j, lessons[j]);
                }

                return `
                    <div class="section-item card mt-3 p-3 border-primary" data-section-index="${i}">
                        <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                            <strong>Phần ${i + 1}: ${section.SectionName || ''}</strong>
                            <button type="button" class="btn btn-light btn-sm remove-section">Xóa phần</button>
                        </div>
                        <div class="card-body">
                            <input type="hidden" name="Sections[${i}].SectionId" value="${section.SectionId || 0}" />
                            <input type="hidden" name="Sections[${i}].Order" value="${section.Order || i + 1}" />
                            <div class="mb-2">
                                <label class="form-label">Tên phần</label>
                                <input name="Sections[${i}].SectionName" class="form-control" value="${section.SectionName || ''}" required />
                            </div>
                            <div class="mb-2">
                                <label class="form-label">Mô tả</label>
                                <textarea name="Sections[${i}].Description" class="form-control">${section.Description || ''}</textarea>
                            </div>
                            <div class="lessons-container" data-section-index="${i}">
                                ${lessonHtml}
                            </div>
                            <button type="button" class="btn btn-outline-primary btn-sm add-lesson mt-2" data-section-index="${i}">
                                <i class="fas fa-plus me-1"></i> Thêm bài học
                            </button>
                        </div>
                    </div>`;
            }

            initialSections.forEach((s, i) => {
                $("#sections-container").append(createSectionForm(s, i));
            });

            $("#add-section").on("click", function () {
                const section = { Lessons: [] };
                const html = createSectionForm(section, sectionIndex);
                $("#sections-container").append(html);
                sectionIndex++;
            });

            $(document).on("click", ".add-lesson", function () {
                const sectionIdx = $(this).data("section-index");
                const container = $(`.lessons-container[data-section-index='${sectionIdx}']`);
                const lessonIdx = container.find(".lesson-item").length;
                container.append(createLessonForm(sectionIdx, lessonIdx));
            });

            $(document).on("click", ".remove-section", function () {
                $(this).closest(".section-item").remove();
            });

            $(document).on("click", ".remove-lesson", function () {
                $(this).closest(".lesson-item").remove();
            });

            // Preview files before upload
            $(document).on('change', 'input[type="file"]', function (e) {
                const input = e.target;
                const previewContainer = $(input).next();
                if (input.files && input.files[0]) {
                    const reader = new FileReader();
                    reader.onload = function (event) {
                        if (input.accept.includes('image')) {
                            const img = $('<img>').attr('src', event.target.result).addClass('mt-2').css({ 'max-width': '200px' });
                            previewContainer.replaceWith(img);
                        } else if (input.accept.includes('video')) {
                            const video = $('<video>').attr('src', event.target.result).attr('controls', true).addClass('mt-2').css({ 'max-width': '200px' });
                            previewContainer.replaceWith(video);
                        }
                    };
                    reader.readAsDataURL(input.files[0]);
                }
            });

            // Handle AJAX form submission with file uploads
            $('#course-form').on('submit', function (e) {
                e.preventDefault();
                const form = $(this);
                const actionUrl = form.attr('action');
                const formData = new FormData(form[0]);

                $.ajax({
                    url: actionUrl,
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            alert(response.message);
                            window.location.href = "@Url.Action("Index")";
                        } else {
                            alert('Lỗi: ' + (response.message || 'Có lỗi xảy ra.') + '\nChi tiết: ' + JSON.stringify(response.errors || {}));
                        }
                    },
                    error: function (xhr) {
                        alert('Lỗi kết nối đến máy chủ: ' + (xhr.responseJSON?.message || 'Lỗi không xác định'));
                    }
                });
            });
        });
    </script>
}